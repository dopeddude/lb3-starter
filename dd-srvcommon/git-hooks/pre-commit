#!/usr/bin/env bash

#!/usr/bin/env bash -x

echo -n '>>> starting Pre Commit hook'

function print_abort_reasons {
	local std_out_err=$1
	local regex_exit_status='exit\sstatus\s[0-9]{1,3}'

	local exit_status=$(echo -e "$std_out_err" | grep -oEi -m 1 "$regex_exit_status" | grep -oEi '[0-9]{1,3}$')

	local abort_message_header=$(echo '>>> internal exit_status' "$exit_status")

	if [ "${exit_status}" == 255 ]; then
		echo "$abort_message_header" '::An uncaught Exception from node process. Probably any missing deps.'
	elif [ "${exit_status}" == 254 ]; then
		echo "$abort_message_header" '::Some Gulp Error.'
	elif [ "${exit_status}" == 253 ]; then
		echo "$abort_message_header" '::Please Add the automatically fixed/linted files to git. And then rerun git commit.'
	else
		echo "$abort_message_header" '::Some unknown error but yes, still an error!!!! :P'
	fi

}

printf  "\n\n%sPre Commit Command Start%s\n" \
		'---------------' \
		'---------------'

result_std_out_err="$(script -q /dev/null npm run beforecommit 2>&1)"
result_success_status=$?

printf  "%s\n%sPre Commit Command End%s\n\n" \
		"$result_std_out_err" \
		'---------------' \
		'---------------'

echo '>>> The command exit status: ' "$result_success_status"

if [ $result_success_status = 0 ]; then
	echo '>>> Congrats, all Pre Commit checks passed.'
	exit 0
#	exit 1;
fi

#Play bell as an alert --- cool :-)
echo -e '>>> [ERROR] The validation checks for Pre Commit failed. Aborting Commit.\a'

print_abort_reasons "$result_std_out_err"

exit 1;
